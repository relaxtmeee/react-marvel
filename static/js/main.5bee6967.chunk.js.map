{"version":3,"sources":["components/appHeader/AppHeader.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/errorBoundary/ErrorBoundary.js","components/spinner/Spinner.js","services/MarvelServices.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/pages/MainPage.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","href","end","to","style","color","isActive","ErrorMessage","display","width","height","objectFit","margin","src","img","alt","ErrorBoundary","props","useState","error","children","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","useMarvelService","loading","setLoading","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","name","getCharacter","id","getAllComics","_transformComics","getComic","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","imgStyle","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","charlist","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","imgClassName","CharInfo","charId","skeleton","MainPage","selectedChar","setSelectedChar","decoration","ComicsList","comicsList","setComicsList","setnewItemLoading","comicsEnded","setComicsEnded","onComicsListLoaded","newComicsList","AppBanner","avengers","avengersLogo","ComicsPage","App","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5bee6967.chunk.js","sourcesContent":["import './appHeader.scss';\nimport { NavLink } from 'react-router-dom';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li>\n                        <NavLink \n                            end\n                            to={\"/\"}\n                            style={({isActive}) => ({color : isActive ? '#9F0013' : 'inherit'})}>\n                            Characters\n                        </NavLink>\n                    </li>\n                    /\n                    <li>\n                        <NavLink \n                            end\n                            to={\"/comics\"}\n                            style={({isActive}) => ({color : isActive ? '#9F0013' : 'inherit'})}>\n                            Comics\n                        </NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\"\n\nconst ErrorMessage = () => {\n    return (\n        // <img src={process.env.PUBLIC_URL + '/error.gif'} />\n        <img style={{display: \"block\", width: \"250px\", height: \"250px\", objectFit: \"contain\", margin: \"0 auto\"}} src={img} alt=\"error\"/>\n    )\n    \n}\n\nexport default ErrorMessage;","import { useState } from \"react\";\nimport { Component } from \"react/cjs/react.production.min\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nconst ErrorBoundary = (props) => {\n\n    const [error, setError] = useState(false);\n\n    function componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        setError(true);\n    }\n    \n  \n    if (error) {\n        return <ErrorMessage/>\n    }\n    return props.children;\n    \n}\n\nexport default ErrorBoundary;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const { loading, request, error, clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=9ae4aad6775132924cbe488a353b2673';\n    const _baseOffset = 0;\n\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return await res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacterByName = async (name) => {\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res =  await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n      const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n    \n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension, \n            homepage: char.urls[0].url, \n            wiki: char.urls[1].url,\n            comics: char.comics.items \n        }\n    }\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n            title: comics.title,\n            description: comics.description || 'There is no description',\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            language: comics.textObjects.language || 'en-us',\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available'\n        }\n    }\n\n    return {loading, error, clearError, getAllCharacters, getCharacterByName, getCharacter, getAllComics, getComic}\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type': 'application/json'}) => {\n\n        setLoading(true);\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status ${response.status}`);\n            }\n\n            const data = await response.json();    \n\n            setLoading(false);\n\n            return data;\n\n        } catch(e) {\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n    }, [])\n\n    const clearError = useCallback(() => {\n        setError(null);\n    }, [])\n    \n    return {loading, request, error, clearError};\n\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useState, useEffect} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelServices';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacter, clearError} =  useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n        getCharacter(id)\n            .then(onCharLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar","import React, {Component, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelServices';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [charEnded, setCharEnded] = useState(false);\n\n  \n    const {loading, error, getAllCharacters} = useMarvelService();\n\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n        setCharList(charlist => [...charList, ...newCharList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n    \n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n \n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                    if (e.key === ' ' || e.key === \"Enter\") {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n};\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, Component, Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelServices';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\n\n const CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const { loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, []);\n\n    useEffect(() => {\n\n        updateChar();\n\n    }, [props.charId])\n\n\n    const updateChar = () => {\n        const {charId} = props;\n        if(!charId) {\n            return;\n        }\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n        \n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n\n\n    const skeleton = char || loading || error ? null : <Skeleton/>\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n\n    \n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    const imgClassName = thumbnail != \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ? \"\" : \"dont\"\n    return (\n        <>\n            <div className=\"char__basics\">\n                    <img src={thumbnail} alt={name} className={imgClassName}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                    {description}\n                </div>\n                <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                    {\n                        comics.length > 0 ? null : 'There is no comics with this character'\n                    }\n                    {\n                        comics.map((item,i) => {\n                            if (i > 9) {\n                                return;\n                            }\n                            return (\n                                <li key ={i} className=\"char__comics-item\">\n                                    {item.name}\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n};\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Fragment, useState } from \"react\";\n\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\"\nimport RandomChar from \"../randomChar/RandomChar\"\nimport CharList from \"../charList/CharList\"\nimport CharInfo from \"../charInfo/CharInfo\"\n\nimport decoration from '../../resources/img/vision.png';\n\nconst MainPage = () => {\n    const [selectedChar, setSelectedChar] = useState(null);\n\n    const onCharSelected = (id) => {\n        setSelectedChar(id);\n    }\n    return (\n        <>\n            <ErrorBoundary>\n                <RandomChar/>\n            </ErrorBoundary>\n            \n            <div className=\"char__content\">\n                <ErrorBoundary>\n                    <CharList onCharSelected={onCharSelected}/>\n                </ErrorBoundary>\n                \n                <ErrorBoundary>\n                    <CharInfo charId={selectedChar}/>\n                </ErrorBoundary>\n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n        </>\n    )   \n\n}\n\nexport default MainPage;","import {useState, useEffect} from 'react';\nimport useMarvelService from '../../services/MarvelServices';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setnewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems (arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <a href=\"#\">\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </a>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { Fragment, useState } from \"react\";\nimport ComicsList from '../comicsList/ComicsList';\nimport AppBanner from '../appBanner/AppBanner';\n\nconst ComicsPage = () => {\n\n    return (\n        <>\n            <AppBanner />\n            <ComicsList />\n        </>\n    )   \n\n}\n\nexport default ComicsPage;","import {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport { Component } from \"react/cjs/react.production.min\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\n\nimport MainPage from '../pages/MainPage';\nimport ComicsPage from '../pages/ComicsPage';\n\n\nconst App = () => {\n\n \n    return (\n        <Router> \n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Routes>\n                        <Route path='/' element={<MainPage/>}/>\n                        <Route path='/comics' element={<ComicsPage/>}/>\n                    </Routes>\n                </main>\n        </div>\n        </Router>\n       \n    )\n\n   \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n);"],"sourceRoot":""}